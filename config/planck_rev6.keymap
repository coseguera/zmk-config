#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};
&lt {
    quick-tap-ms = <200>;
};

/ {
    ht: hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP";
        #binding-cells = <2>;
        flavor = "hold-preferred";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        bindings = <&kp>, <&kp>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_grave {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp TAB>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <14 15>;
            bindings = <&kp MINUS>;
        };
        combo_under {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp UNDER>;
        };
        combo_plus {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp PLUS>;
        };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp EQUAL>;
        };
        combo_dqt {
            timeout-ms = <50>;
            key-positions = <19 20>;
            bindings = <&kp DQT>;
        };
        combo_sqt {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp SQT>;
        };
        combo_bslh {
            timeout-ms = <50>;
            key-positions = <34 35>;
            bindings = <&kp BSLH>;
        };
        combo_del {
            timeout-ms = <50>;
            key-positions = <32 44>;
            bindings = <&kp DEL>;
        };
    };
};

/ {
    macros {
        ZMK_MACRO(bkts_macro,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        )
        ZMK_MACRO(brcs_macro,
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        )
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q        &kp W       &kp E   &kp R       &kp T          &none &none &kp Y       &kp U      &kp I          &kp O       &kp P
    &mt LALT A   &mt LCTRL S &lt 2 D &mt LGUI F  &kp G          &none &none &kp H       &mt LGUI J &lt 3 K        &mt LCTRL L &mt LALT SEMI
    &ht LSHIFT Z &kp X       &kp C   &kp V       &kp B          &none &none &kp N       &kp M      &kp COMMA      &kp DOT     &ht RSHIFT SLASH
    &none        &none       &none   &bkts_macro &mt LGUI ENTER &none &none &lt 1 SPACE &kp BSPC   &none          &none       &none
            >;
        };

        first_layer {
            bindings = <
    &kp N1        &kp N2       &kp N3     &kp N4        &kp N5      &none &none &kp N6    &kp N7        &kp N8      &kp N9         &kp N0
    &mt LALT EXCL &mt LCTRL AT &lt 2 HASH &mt LGUI DLLR &kp PRCNT   &none &none &kp CARET &mt LGUI AMPS &lt 3 ASTRK &mt LCTRL LPAR &mt LALT RPAR
    &kp LBKT      &kp RBKT     &kp LBRC   &kp RBRC      &none       &none &none &kp LEFT  &kp DOWN      &kp UP      &kp RIGHT      &kp SLASH
    &none         &none        &none      &brcs_macro   &lt 2 ENTER &none &none &trans    &trans        &trans      &none          &none
            >;
        };

        second_layer {
            bindings = <
    &none             &none              &none  &none    &none &none &none &none    &none     &none     &none   &none
    &mt LALT C_BRI_DN &mt LCTRL C_BRI_UP &trans &kp LGUI &none &none &none &none    &none     &none     &none   &none
    &none             &none              &none  &none    &none &none &none &kp HOME &kp PG_DN &kp PG_UP &kp END &none 
    &none             &none              &none  &none    &none &none &none &none    &none     &none     &none   &none 
            >;
        };

        third_layer {
            bindings = <
    &kp F1      &kp F2       &kp F3   &kp F4          &kp F5          &none &none &none             &none                   &none  &none     &none
    &mt LALT F6 &mt LCTRL F7 &lt 2 F8 &mt LGUI F9     &kp F10         &none &none &mt C_MUTE K_MUTE &mt LGUI C_PP           &trans &kp LCTRL &kp LALT
    &none       &none        &none    &kp F11         &kp F12         &none &none &none             &mt LC(LS(M)) LG(LS(M)) &none  &none     &none 
    &none       &none        &none    &mt C_RW C_PREV &mt C_FF C_NEXT &none &none &kp C_VOL_DN      &kp C_VOL_UP            &none  &none     &none 
            >;
        };
    };
};
